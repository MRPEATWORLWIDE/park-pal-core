import { Navigation } from '#components/Navigation'
import { getProductByCode, getProductVariants, LocalizedProduct, LocalizedVariant, products } from '#data/products'
import { serverSideTranslations } from '#i18n/serverSideTranslations'
import { withLocalePaths } from '#i18n/withLocalePaths'
import { basePath } from '#next.config'
import type { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'


type Query = {
  locale: string
  code: string
}

type Props = {
  product: LocalizedProduct
  variants: LocalizedProduct[]
}

const VariantsSelector: React.FC<{ variants: LocalizedProduct[], initialSelection: LocalizedVariant[] }> = ({  }) => {
  return (
    <div>
      
    </div>
  )
}

const ProductDetailPage: NextPage<Props> = ({ product, variants }) => {

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href={basePath + '/favicon.ico'} />
      </Head>

      <Navigation />

      <p>{product.code}</p>
      <img width="300" src={product.primaryImage} alt={product.name} />
      <p>{product.name}</p>
      <p>{product.description}</p>
      <pre>{JSON.stringify(product.variant, undefined, 4)}</pre>

      <VariantsSelector variants={variants} initialSelection={product.variant} />
    </div>
  )
}

export const getStaticPaths: GetStaticPaths<Query> = () => {
  return withLocalePaths({
    paths: products.map(product => ({
      params: {
        code: product.code
      }
    })),
    fallback: false
  })
}

export const getStaticProps: GetStaticProps<Props, Query> = async ({ params }) => {
  const { code, locale } = params!

  const product = getProductByCode(code, locale);
  const variants = getProductVariants(product, locale)

  return {
    props: {
      product,
      variants,
      ...(await serverSideTranslations(locale))
    }
  }
}

export default ProductDetailPage
